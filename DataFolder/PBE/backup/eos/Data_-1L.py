import numpy as np
from ReferenceFiles.unit_conversions import *

#This is the data obtained from quantum esspresso
#pbe-nl-kjpaw_psl.1.0.0

# SCF cycle convergence threshold
convergence_threshold = 1     # in Ry = 1 meV

# Simulation details
chemical_formula = 'Si'
structure_names = ['$Fd\overline{3}m$', '$I4_{1}/amd$']  # Hermann-Mauguin notation for diamond & beta-Sn structures
n_atom = 8


# volumes_sim_diamond = cubic_meters_per_cubic_angstrom * np.array([20.12663366986, 20.33849296808, 20.55035227127, 20.76221156948, 20.97407087773, 21.18593017590, 21.39778947408, 21.60964878233, 21.82150808054, 22.03336738373, 22.24522668195])
# total_energies_strain_diamond = (joules_per_rydberg / n_atom) * np.array([-373.50358276, -373.50574327, -373.50735001, -373.50848663, -373.50932255, -373.50962104, -373.50929121, -373.50850353, -373.50725521, -373.50575021, -373.50360885])
cella_diamond = (1e-10)*np.array([5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647,5.46743794647])
cellc_diamond = (1e-10)*np.array([5.23520589733,5.29031332800,5.34542075733,5.40052818800,5.45563561867,5.51074304933,5.56585048000,5.62095791067,5.67606534133,5.73117277067,5.78628020133])
total_energies_strain_diamond = (joules_per_rydberg/n_atom)*np.array([-373.43227878,-373.43407732,-373.43545581,-373.43641689,-373.43697641,-373.43714824,-373.43692052,-373.43639056,-373.43548319,-373.43422914,-373.43262606])
volumes_sim_diamond = np.power(cella_diamond, 2) * cellc_diamond/n_atom

cella_betasn = (1e-10)*np.array([4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682,4.77033373682])
cellc_betasn = (1e-10)*np.array([4.33214478286,4.37774630743,4.42334783086,4.46894935543,4.51455088000,4.56015240343,4.60575392686,4.65135545143,4.69695697600,4.74255849943,4.78816002400])
total_energies_strain_betasn = (joules_per_rydberg/n_atom)*np.array([-373.52868324,-373.53344717,-373.53690714,-373.53923509,-373.54057235,-373.54102459,-373.54060310,-373.53940412,-373.53746716,-373.53486944,-373.53170329])
volumes_sim_betasn = np.power(cella_betasn, 2) * cellc_betasn/n_atom

